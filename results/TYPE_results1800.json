{"model": "Pipeline(memory=None,\n         steps=[('normalize', TextNormalizer_lemmatize(language=None)),\n                ('ngram_vect',\n                 TfidfVectorizer(analyzer='word', binary=False,\n                                 decode_error='strict',\n                                 dtype=<class 'numpy.float64'>,\n                                 encoding='utf-8', input='content',\n                                 lowercase=False, max_df=1.0, max_features=None,\n                                 min_df=1, ngram_range=(1, 2), norm='l2',\n                                 preprocessor=None, smooth_idf=True,\n                                 stop_word...\n                                 tokenizer=<function identity at 0x00000222493FFB88>,\n                                 use_idf=True, vocabulary=None)),\n                ('classifier',\n                 LogisticRegression(C=1.0, class_weight=None, dual=False,\n                                    fit_intercept=True, intercept_scaling=1,\n                                    l1_ratio=None, max_iter=100,\n                                    multi_class='multinomial', n_jobs=None,\n                                    penalty='l2', random_state=None,\n                                    solver='newton-cg', tol=0.0001, verbose=0,\n                                    warm_start=False))],\n         verbose=False)", "name": "LogisticRegression", "size": [[1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150]], "accuracy": [0.6933333333333334, 0.7333333333333333, 0.6466666666666666, 0.6466666666666666, 0.5666666666666667, 0.6133333333333333, 0.62, 0.6533333333333333, 0.6666666666666666, 0.6333333333333333, 0.7066666666666667, 0.6666666666666666], "precision": [0.6444270850285888, 0.7168504910073928, 0.6225207158759071, 0.6243107769423559, 0.5447922212363207, 0.5902109871301142, 0.612037005267405, 0.6816186418572298, 0.637767651269274, 0.6081198689017838, 0.685876715876716, 0.626798849790871], "recall": [0.6933333333333334, 0.7333333333333333, 0.6466666666666666, 0.6466666666666666, 0.5666666666666667, 0.6133333333333333, 0.62, 0.6533333333333333, 0.6666666666666666, 0.6333333333333333, 0.7066666666666667, 0.6666666666666666], "f1_valid": [0.6651181694145267, 0.7219363484304153, 0.6336847382008671, 0.632994708994709, 0.5535837975476946, 0.5998934506419412, 0.608968306819583, 0.6533706722396379, 0.6473577533577534, 0.620030431605396, 0.6938840891181316, 0.6438504452063774], "f1_train": [0.9128660629391525, 0.9069929640282011, 0.9060414085110635, 0.9054450880978948, 0.9078465094321776, 0.907225265883831, 0.9066914378136554, 0.9057534206768766, 0.9066528131150778, 0.9060676822335948, 0.9049092640570755, 0.9105210707061919], "time": [1.6281163692474365, 1.7249903678894043, 2.0782454013824463, 2.114264965057373, 1.8516650199890137, 1.5987024307250977, 1.8788836002349854, 1.6184799671173096, 1.7910466194152832, 1.833008050918579, 1.5191426277160645, 1.6369483470916748]}
{"model": "Pipeline(memory=None,\n         steps=[('normalize', TextNormalizer_lemmatize(language=None)),\n                ('ngram_vect',\n                 TfidfVectorizer(analyzer='word', binary=False,\n                                 decode_error='strict',\n                                 dtype=<class 'numpy.float64'>,\n                                 encoding='utf-8', input='content',\n                                 lowercase=False, max_df=1.0, max_features=None,\n                                 min_df=1, ngram_range=(1, 2), norm='l2',\n                                 preprocessor=None, smooth_idf=True,\n                                 stop_word...\n                                 token_pattern='(?u)\\\\b\\\\w\\\\w+\\\\b',\n                                 tokenizer=<function identity at 0x00000222493FFB88>,\n                                 use_idf=True, vocabulary=None)),\n                ('classifier',\n                 SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n                     decision_function_shape='ovr', degree=3,\n                     gamma='auto_deprecated', kernel='linear', max_iter=-1,\n                     probability=False, random_state=None, shrinking=True,\n                     tol=0.001, verbose=False))],\n         verbose=False)", "name": "SVC", "size": [[1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150]], "accuracy": [0.7133333333333334, 0.6266666666666667, 0.6266666666666667, 0.54, 0.5866666666666667, 0.64, 0.6333333333333333, 0.6666666666666666, 0.68, 0.6533333333333333, 0.7, 0.6733333333333333], "precision": [0.6921462488129154, 0.6050003539437502, 0.59341822908025, 0.508127479279553, 0.5673870307398197, 0.6424712643678161, 0.6252698412698413, 0.6412224411295617, 0.6521589639076985, 0.653615001556178, 0.6802873275792529, 0.6390915254237288], "recall": [0.7133333333333334, 0.6266666666666667, 0.6266666666666667, 0.54, 0.5866666666666667, 0.64, 0.6333333333333333, 0.6666666666666666, 0.68, 0.6533333333333333, 0.7, 0.6733333333333333], "f1_valid": [0.7006600518458925, 0.6132398887097397, 0.6087473437878259, 0.5213569116967175, 0.5761454058449323, 0.6337130877508237, 0.6152686446089853, 0.6487127084801503, 0.6653810758106394, 0.6456493202062822, 0.6890074224021593, 0.6555555555555554], "f1_train": [0.9720927619766775, 0.9702369926009919, 0.9746628830501741, 0.9688650882945774, 0.972821174329653, 0.9740526369261798, 0.9729285689019258, 0.9733225967003735, 0.9774237981192784, 0.970699289307518, 0.9735656429267301, 0.9726431605047391], "time": [3.842719793319702, 3.8651797771453857, 4.216797351837158, 3.7610630989074707, 3.6917731761932373, 3.7249226570129395, 3.7135009765625, 3.984164237976074, 3.786332130432129, 3.905632495880127, 3.5434794425964355, 4.01135516166687]}
{"model": "Pipeline(memory=None,\n         steps=[('normalize', TextNormalizer_lemmatize(language=None)),\n                ('ngram_vect',\n                 TfidfVectorizer(analyzer='word', binary=False,\n                                 decode_error='strict',\n                                 dtype=<class 'numpy.float64'>,\n                                 encoding='utf-8', input='content',\n                                 lowercase=False, max_df=1.0, max_features=None,\n                                 min_df=1, ngram_range=(1, 2), norm='l2',\n                                 preprocessor=None, smooth_idf=True,\n                                 stop_words=None, strip_accents=None,\n                                 sublinear_tf=False,\n                                 token_pattern='(?u)\\\\b\\\\w\\\\w+\\\\b',\n                                 tokenizer=<function identity at 0x00000222493FFB88>,\n                                 use_idf=True, vocabulary=None)),\n                ('classifier',\n                 KNeighborsClassifier(algorithm='auto', leaf_size=30,\n                                      metric='minkowski', metric_params=None,\n                                      n_jobs=None, n_neighbors=8, p=2,\n                                      weights='uniform'))],\n         verbose=False)", "name": "KNeighborsClassifier", "size": [[1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150], [1650, 150]], "accuracy": [0.6333333333333333, 0.5466666666666666, 0.58, 0.5, 0.5133333333333333, 0.5266666666666666, 0.5533333333333333, 0.5866666666666667, 0.5533333333333333, 0.5333333333333333, 0.5666666666666667, 0.54], "precision": [0.6634529411764706, 0.5559090909090909, 0.594, 0.4981842818428184, 0.50884262485482, 0.5122687506783893, 0.5223485686087114, 0.571015873015873, 0.5540981240981241, 0.5828571428571429, 0.5641062339899549, 0.5735147695441815], "recall": [0.6333333333333333, 0.5466666666666666, 0.58, 0.5, 0.5133333333333333, 0.5266666666666666, 0.5533333333333333, 0.5866666666666667, 0.5533333333333333, 0.5333333333333333, 0.5666666666666667, 0.54], "f1_valid": [0.6067436023496676, 0.5264411027568923, 0.558728867231449, 0.4762665470466471, 0.47971395672600486, 0.49640274738455065, 0.5350221513379408, 0.5687301587301588, 0.5305669403060708, 0.5179008496766871, 0.556422905323452, 0.5237623884632131], "f1_train": [0.6223271947109997, 0.6280982971532022, 0.6385126415527769, 0.6431063104122509, 0.637769160749831, 0.6255276454851202, 0.634837154673623, 0.6357030867652936, 0.6275415191229606, 0.6170678230415659, 0.6458117895486942, 0.6341196528532103], "time": [1.0322346687316895, 0.9984326362609863, 1.1496803760528564, 0.9309983253479004, 0.9239768981933594, 0.9150826930999756, 0.9379332065582275, 1.2225046157836914, 1.121737003326416, 1.062741994857788, 1.1345858573913574, 1.0651986598968506]}
